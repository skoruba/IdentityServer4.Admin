version: "3.4"
services:
  skoruba.identityserver4.admin:
    image: '${DOCKER_REGISTRY-}identityserver4-admin:it'
    build:
      context: .
      dockerfile: src/Skoruba.IdentityServer4.Admin/Dockerfile
    container_name: identityserver4-admin
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - VIRTUAL_HOST=admin.skoruba.local
      - 'ConnectionStrings__ConfigurationDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__IdentityDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__AdminLogDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__AdminAuditLogDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'      
      - 'AdminConfiguration__IdentityAdminBaseUrl=${ADMIN_URL}'
      - 'AdminConfiguration__IdentityAdminRedirectUri=${ADMIN_URL}/signin-oidc'
      - 'AdminConfiguration__IdentityServerBaseUrl=${BASE_URL}'
      - 'AdminConfiguration__RequireHttpsMetadata=false'
      - "IdentityServerData__Clients__0__ClientUri=${ADMIN_URL}"
      - "IdentityServerData__Clients__0__RedirectUris__0=${ADMIN_URL}/signin-oidc"
      - "IdentityServerData__Clients__0__FrontChannelLogoutUri=${ADMIN_URL}/signin-oidc"
      - "IdentityServerData__Clients__0__PostLogoutRedirectUris__0=${ADMIN_URL}/signout-callback-oidc"
      - "IdentityServerData__Clients__0__AllowedCorsOrigins__0=${ADMIN_URL}"
      - "IdentityServerData__Clients__1__RedirectUris__0=${ADMIN_API_URL}/swagger/oauth2-redirect.html"
      - 'Serilog__WriteTo__1__Args__connectionString=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'DockerConfiguration__UpdateCaCertificate=true'


    command: dotnet IdentityServer4.Admin.dll /seed
    depends_on:
      - db
      - identityserver4.sts.identity
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/identitydata.json:/app/identitydata.json'
      - './shared/identityserverdata.json:/app/identityserverdata.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
  identityserver4.admin.api:
    image: ${DOCKER_REGISTRY-}identityserver4-admin-api:it
    build:
      context: .
      dockerfile: src/Skoruba.IdentityServer4.Admin.Api/Dockerfile
    depends_on:
      - db
    expose:
      - 80 
      - ${ADMIN_API_URL_PORT}:80
      - "AdminApiConfiguration__ApiBaseUrl=${ADMIN_API_URL}"
      - "AdminApiConfiguration__IdentityServerBaseUrl=${BASE_URL}"
    container_name: identityserver4-admin-api
    environment:
      - VIRTUAL_HOST=admin-api.skoruba.local
      - AdminApiConfiguration__RequireHttpsMetadata=false
      - 'AdminApiConfiguration__ApiBaseUrl=https://admin-api.skoruba.local'
      - 'AdminApiConfiguration__IdentityServerBaseUrl=https://sts.skoruba.local'
      - 'ConnectionStrings__ConfigurationDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__IdentityDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__AdminLogDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__AdminAuditLogDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development

  identityserver4.sts.identity:
    image: ${DOCKER_REGISTRY-}identityserver4-sts-identity:it
    expose:
      - 80 
      - ${BASE_URL_PORT}:80
    build:
      context: .
      dockerfile: src/Skoruba.IdentityServer4.STS.Identity/Dockerfile
    container_name: identityserver4-sts-identity
    environment:
      - VIRTUAL_HOST=sts.skoruba.local
      - 'ConnectionStrings__ConfigurationDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__IdentityDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'AdminConfiguration__IdentityAdminBaseUrl=${ADMIN_URL}'
      - 'IdentityServerOptions__IssuerUri=https://sts.skoruba.local'
      - IdentityServerOptions__Events__RaiseErrorEvents=true
      - IdentityServerOptions__Events__RaiseInformationEvents=true
      - IdentityServerOptions__Events__RaiseFailureEvents=true
      - IdentityServerOptions__Events__RaiseSuccessEvents=true
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - db
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
  db:
    image: mcr.microsoft.com/mssql/server
    container_name: identityserver4-db
    expose:
      - 1433
    # ports:
    #   - 1433:1433
    environment:
      SA_PASSWORD: '${DB_PASSWORD:-Password_123}'
      ACCEPT_EULA: 'Y'
    volumes:
      - 'dbdata:/var/opt/mssql'
volumes:
  dbdata:
    driver: local
# networks:
#   default:
#     driver: bridge

