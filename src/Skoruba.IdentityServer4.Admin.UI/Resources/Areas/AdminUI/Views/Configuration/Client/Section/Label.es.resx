<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbsoluteRefreshTokenLifetime_Info" xml:space="preserve">
    <value>El tiempo de vida máximo de una token de refresco en segundos. 2592000 segundos / 30 dias por defecto.</value>
  </data>
  <data name="AbsoluteRefreshTokenLifetime_Label" xml:space="preserve">
    <value>Tiempo de vida absoluto de la token de refresco</value>
  </data>
  <data name="AccessTokenLifetime_Info" xml:space="preserve">
    <value>El tiempo de vida de la token de acceso en segundos. 3600 segundos / 1 hora por defecto.</value>
  </data>
  <data name="AccessTokenLifetime_Label" xml:space="preserve">
    <value>Tiempo de vida de la token de acceso</value>
  </data>
  <data name="AccessTokenTypes_Info" xml:space="preserve">
    <value>Especifica si la token de acceso es una token de referencia o una token JWT autocontenida. JWT por defecto.</value>
  </data>
  <data name="AccessTokenTypes_Label" xml:space="preserve">
    <value>Tipo de token de acceso</value>
  </data>
  <data name="AllowAccessTokensViaBrowser_Info" xml:space="preserve">
    <value>Especifica si este cliente le es permitido recivir tokens de acceso via navegador. Esto es util para reforzar flujos que permite multiple tipos de respuesta (Por ejemplo, impidiendo a un cliente de flujo hibrido que se supone que usa el código id_token para agregar el tipo de respuesta de token y por ende dejando escapar la token al navegador).</value>
  </data>
  <data name="AllowAccessTokensViaBrowser_Label" xml:space="preserve">
    <value>Permitir token de acceso via navegador</value>
  </data>
  <data name="AllowOfflineAccess_Info" xml:space="preserve">
    <value>Especifica si este cliente puede solicitar tokens de refresco (solicitando el alcance offline_access).</value>
  </data>
  <data name="AllowOfflineAccess_Label" xml:space="preserve">
    <value>Permitir acceso sin conexión</value>
  </data>
  <data name="AllowPlainTextPkce_Info" xml:space="preserve">
    <value>Especifica si los clientes usando PKCE pueden usar el desafio de código de texto plano. No recomendado. Deshabilitado por defecto</value>
  </data>
  <data name="AllowPlainTextPkce_Label" xml:space="preserve">
    <value>Permitir PKCE en texto plano</value>
  </data>
  <data name="AllowRememberConsent_Info" xml:space="preserve">
    <value>Especifica si el usuario puede escojer almacenar las deciciones de consentimiento. Habilitado por defecto.</value>
  </data>
  <data name="AllowRememberConsent_Label" xml:space="preserve">
    <value>Permitir recordar censentimiento</value>
  </data>
  <data name="AlwaysIncludeUserClaimsInIdToken_Info" xml:space="preserve">
    <value />
  </data>
  <data name="AlwaysIncludeUserClaimsInIdToken_Label" xml:space="preserve">
    <value>Siempre incluye reclamaciones de usuario en IdToken</value>
  </data>
  <data name="AlwaysSendClientClaims_Info" xml:space="preserve">
    <value>Si esta establecido, las reclamaciones de cliente seran enviadas en cada flujo. En caso contrario, solo para el flujo de credenciales de cliente. Deshabilitado por defecto.</value>
  </data>
  <data name="AlwaysSendClientClaims_Label" xml:space="preserve">
    <value>Siempre enviar reclamaciones de cliente</value>
  </data>
  <data name="AuthorizationCodeLifetime_Info" xml:space="preserve">
    <value>El tiempo de vida del codigo de autorización en segundos. 300 segundos / 5 minutos por defecto.</value>
  </data>
  <data name="AuthorizationCodeLifetime_Label" xml:space="preserve">
    <value>Tiempo de vida del código de autorización</value>
  </data>
  <data name="ClientId_Info" xml:space="preserve">
    <value>ID unica del cliente</value>
  </data>
  <data name="ClientId_Label" xml:space="preserve">
    <value>ID del cliente</value>
  </data>
  <data name="ClientName_Info" xml:space="preserve">
    <value>Nombre en pantalla del cliente. Usado en las pantallas de inicio de sesión y consentieminto.</value>
  </data>
  <data name="ClientName_Label" xml:space="preserve">
    <value>Nombre del cliente</value>
  </data>
  <data name="ClientUri_Info" xml:space="preserve">
    <value>URI hacia más información acerca del cliente. Usado en la pantalla de consentimiento.</value>
  </data>
  <data name="ClientUri_Label" xml:space="preserve">
    <value>URI del cliente</value>
  </data>
  <data name="Enabled_Info" xml:space="preserve">
    <value>Especifica si el cliente esta habilitado. Habilitado por defecto.</value>
  </data>
  <data name="Enabled_Label" xml:space="preserve">
    <value>Habilitado</value>
  </data>
  <data name="EnableLocalLogin_Info" xml:space="preserve">
    <value>Especifica si el cliente puede usar cuentas locales o solo proveedores de identidad externos. Habilitado por defecto.</value>
  </data>
  <data name="EnableLocalLogin_Label" xml:space="preserve">
    <value>Habilitar el inicio de sesión local</value>
  </data>
  <data name="IdentityTokenLifetime_Info" xml:space="preserve">
    <value>Tiempo de vida de la token de indentidad en segundos. 300 seconds / 5 minutes por defecto.</value>
  </data>
  <data name="IdentityTokenLifetime_Label" xml:space="preserve">
    <value>Tiempo de vida del token de identidad</value>
  </data>
  <data name="IncludeJwtId_Info" xml:space="preserve">
    <value>Especifica si las tokens de acceso JWT deberian tener una ID unica integrada (via la reclamación JTI).</value>
  </data>
  <data name="IncludeJwtId_Label" xml:space="preserve">
    <value>Incluir la ID del JWT</value>
  </data>
  <data name="LogoUri_Info" xml:space="preserve">
    <value>URI del logo del cliente (usado en la pantalla de consentimiento).</value>
  </data>
  <data name="LogoUri_Label" xml:space="preserve">
    <value>URI del logo</value>
  </data>
  <data name="RefreshTokenExpiration_Info" xml:space="preserve">
    <value>Absoluta: La token de refresco expirara en un punto fijo en el tiempo (especificado por AbsoluteRefreshTokenLifetime).

Corrediza: Cuando se este refrescando la token, el tiempo de vida de la token de refresco sera renovado (especificado por SlidingRefreshTokenLifetime). El tiempo de vida no excederá a AbsoluteRefreshTokenLifetime.</value>
  </data>
  <data name="RefreshTokenExpiration_Label" xml:space="preserve">
    <value>Expiración de la token de refresco</value>
  </data>
  <data name="RefreshTokenUsage.Info" xml:space="preserve">
    <value>ReUse: El tirador de la token de refresco se mantendra igual cuando se refresquen tokens.

OneTime: El tirador de la token de refresco sera actualizada cuando se refresquen tokens.</value>
  </data>
  <data name="RefreshTokenUsage.Label" xml:space="preserve">
    <value>Uso de la token de refresco</value>
  </data>
  <data name="RefreshTokenUsage_Info" xml:space="preserve">
    <value>ReUse: El tirador de la token de refresco se mantendra igual cuando se refresquen tokens.

OneTime: El tirador de la token de refresco sera actualizada cuando se refresquen tokens.</value>
  </data>
  <data name="RefreshTokenUsage_Label" xml:space="preserve">
    <value>Uso de la token de refresco</value>
  </data>
  <data name="RequireClientSecret_Info" xml:space="preserve">
    <value>Especifica si este cliente necesita un secreto para solicitar tokens desde un punto final de token. Habilitado por defecto.</value>
  </data>
  <data name="RequireClientSecret_Label" xml:space="preserve">
    <value>Requiere secreto de cliente</value>
  </data>
  <data name="RequireConsent_Info" xml:space="preserve">
    <value>Especifica si una pantalla de consentimiento es necesaria. Habilitado por defecto.</value>
  </data>
  <data name="RequireConsent_Label" xml:space="preserve">
    <value>Requiere consentimiento</value>
  </data>
  <data name="RequirePkce_Info" xml:space="preserve">
    <value>Especifica si los clientes usando un tipo de concesión basado en código de autorización debe enviar una llave de evidencia</value>
  </data>
  <data name="RequirePkce_Label" xml:space="preserve">
    <value>Requiere PKCE</value>
  </data>
  <data name="SlidingRefreshTokenLifetime_Info" xml:space="preserve">
    <value>Tiempo de vida corredizo de una token de refresco en segundos. 1296000 segundos / 15 dias por defecto.</value>
  </data>
  <data name="SlidingRefreshTokenLifetime_Label" xml:space="preserve">
    <value>Tiempo de vida corredizo de la token de refresco</value>
  </data>
  <data name="UpdateAccessTokenClaimsOnRefresh_Info" xml:space="preserve">
    <value>Obtiene o establece un valor indicando si la token de acceso (y sus reclamaciones) deberian ser actualizadas en una petición de token de refresco.</value>
  </data>
  <data name="UpdateAccessTokenClaimsOnRefresh_Label" xml:space="preserve">
    <value>Actualizar las reclamaciones de la token de acceso al refrescar</value>
  </data>
  <data name="AllowedCorsOrigins_Info" xml:space="preserve">
    <value>Si es especificado, puede ser usado por las implementaciones de servicio politicas de CORS por defecto (In-Memory y EF) para construir una politica de CORS para clientes de JavaScript.</value>
  </data>
  <data name="AllowedCorsOrigins_Label" xml:space="preserve">
    <value>Origenes CORS permitidos</value>
  </data>
  <data name="AllowedGrantTypes_Info" xml:space="preserve">
    <value>Especifica los tipos de concesiones el cliente tiene permitido usar. Usa la clase GrantTypes para combinaciones comunes. Lista de concesiones por defecto: Concesión implicita - (implicit), Concesión de credenciales de cliente - (client_credentials), Concesión de codigo de autorización - (authorization_code), Concesión híbrida - (hybrid), Concesió de credenciales de contraseña del propietario del recurso - (password)</value>
  </data>
  <data name="AllowedGrantTypes_Label" xml:space="preserve">
    <value>Tipos de concesión permitidas</value>
  </data>
  <data name="AllowedScopes_Info" xml:space="preserve">
    <value>Por defecto un cliente no tiene acceso a ningun recurso - especifica los recursos permitidos añadiendo los nombres de alcance correspondientes.</value>
  </data>
  <data name="AllowedScopes_Label" xml:space="preserve">
    <value>Alcances permitidos</value>
  </data>
  <data name="Claims_Info" xml:space="preserve">
    <value>Permite establecer reclamaciones para el cliente (seran incluidas en el token de acceso).</value>
  </data>
  <data name="Claims_Label" xml:space="preserve">
    <value>Reclamaciones</value>
  </data>
  <data name="ClientSecrets_Info" xml:space="preserve">
    <value>Lista de secretos de cliente - credenciales para acceder al punto final del token.</value>
  </data>
  <data name="ClientSecrets_Label" xml:space="preserve">
    <value>Secretos del cliente</value>
  </data>
  <data name="IdentityProviderRestrictions_Info" xml:space="preserve">
    <value>Especifica cuales proveedores de identidad externos pueden ser usados con este cliente (puede usarse todos los proveedores de identidad externos si la lista esta vacia). Vacio por defecto.</value>
  </data>
  <data name="IdentityProviderRestrictions_Label" xml:space="preserve">
    <value>Restricciones de proveedor de identidad</value>
  </data>
  <data name="PostLogoutRedirectUris_Info" xml:space="preserve">
    <value>Especifica URIs a las que se puede redireccionar despues de un cierre de sesión.</value>
  </data>
  <data name="PostLogoutRedirectUris_Label" xml:space="preserve">
    <value>URIs de redirección despues del cierre de sesión</value>
  </data>
  <data name="RedirectUris_Info" xml:space="preserve">
    <value>Especifica las URIs permitidas a la que es posible entregar tokens o códigos de authorización.</value>
  </data>
  <data name="RedirectUris_Label" xml:space="preserve">
    <value>URIs de redirección</value>
  </data>
  <data name="Type_Info" xml:space="preserve">
    <value/>
  </data>
  <data name="Type_Label" xml:space="preserve">
    <value>Tipo de reclamación</value>
  </data>
  <data name="Value_Info" xml:space="preserve">
    <value/>
  </data>
  <data name="Value_Label" xml:space="preserve">
    <value>Valor de reclamación</value>
  </data>
  <data name="SecretType_Info" xml:space="preserve">
    <value/>
  </data>
  <data name="SecretType_Label" xml:space="preserve">
    <value>Tipo de secreto</value>
  </data>
  <data name="SecretValue_Info" xml:space="preserve">
    <value/>
  </data>
  <data name="SecretValue_Label" xml:space="preserve">
    <value>Valor del secreto</value>
  </data>
  <data name="HashType_Info" xml:space="preserve">
    <value/>
  </data>
  <data name="HashType_Label" xml:space="preserve">
    <value>Tipo de hash</value>
  </data>
  <data name="RoleNormalizedName_Info" xml:space="preserve">
    <value>Nombre del rol normalizado.</value>
  </data>
  <data name="RoleNormalizedName_Label" xml:space="preserve">
    <value>Nombre normalizado</value>
  </data>
  <data name="BackChannelLogoutSessionRequired_Info" xml:space="preserve">
    <value>Especifica si la ID de sesión del usuario deberia ser enviada en la petición a la BackChannelLogoutUri. Habilitado por defecto.</value>
  </data>
  <data name="BackChannelLogoutSessionRequired_Label" xml:space="preserve">
    <value>Requiere canal trasero de cierre de sesión</value>
  </data>
  <data name="BackChannelLogoutUri_Info" xml:space="preserve">
    <value>Especifica la URI de cierre de sesión en el cliente para el cierre de sesión vía canal trasero basadas en HTTP. Ve la especificación del canal trasero de OIDC para más detalles.</value>
  </data>
  <data name="BackChannelLogoutUri_Label" xml:space="preserve">
    <value>URI del canal trasero de cierre de sesión</value>
  </data>
  <data name="ClientClaimsPrefix_Info" xml:space="preserve">
    <value>Si es establecido, las reclamaciones de client usaran este prefijo. "client_" por defecto. La intencion es hacer que estas no entren en conflicto demanera accidental con las reclamaciones de usuario.</value>
  </data>
  <data name="ClientClaimsPrefix_Label" xml:space="preserve">
    <value>Prefijo de reclamaciones de cliente</value>
  </data>
  <data name="Description_Info" xml:space="preserve">
    <value>Descripción de cliente</value>
  </data>
  <data name="Description_Label" xml:space="preserve">
    <value>Descripción</value>
  </data>
  <data name="FrontChannelLogoutSessionRequired_Info" xml:space="preserve">
    <value>Especifica si la ID de sesión del usuario deberia ser enviada a la FrontChannelLogoutUri. Habilitado por defecto.</value>
  </data>
  <data name="FrontChannelLogoutSessionRequired_Label" xml:space="preserve">
    <value>Requiere canal frontal de cierre de sesión</value>
  </data>
  <data name="FrontChannelLogoutUri_Info" xml:space="preserve">
    <value>Especifica la URI de cierre de sesión en el cliente para el cierre de sesión via canal frontal basado en HTTP. Ve la especificación del canal frontal de OIDC para más detalles.</value>
  </data>
  <data name="FrontChannelLogoutUri_Label" xml:space="preserve">
    <value>URI del canal frontal de cierre de sesión</value>
  </data>
  <data name="PairWiseSubjectSalt_Info" xml:space="preserve">
    <value>Valor de la sal usada en la generación de subjectId por sabido para usuarios de este cliente.</value>
  </data>
  <data name="PairWiseSubjectSalt_Label" xml:space="preserve">
    <value>Sal del sujeto por sabido</value>
  </data>
  <data name="Properties_Info" xml:space="preserve">
    <value>Diccionario para mantener cualquier valor personalizado especifico de cliente según sea necesario.</value>
  </data>
  <data name="Properties_Label" xml:space="preserve">
    <value>Propiedades</value>
  </data>
  <data name="PropertyKey_Info" xml:space="preserve">
    <value>Llave</value>
  </data>
  <data name="PropertyKey_Label" xml:space="preserve">
    <value>Llave</value>
  </data>
  <data name="PropertyValue_Info" xml:space="preserve">
    <value>Valor</value>
  </data>
  <data name="PropertyValue_Label" xml:space="preserve">
    <value>Valor</value>
  </data>
  <data name="ProtocolType_Info" xml:space="preserve">
    <value>El protocolo OpenID Connect por defecto.</value>
  </data>
  <data name="ProtocolType_Label" xml:space="preserve">
    <value>Tipo de protocolo</value>
  </data>
  <data name="UserSsoLifetime_Info" xml:space="preserve">
    <value>La duración máxima (en segundos) desde la ultima vez que el usuario se autentico. Nulo por defecto.</value>
  </data>
  <data name="UserSsoLifetime_Label" xml:space="preserve">
    <value>Tiempo de vida del SSO del usuario</value>
  </data>
  <data name="DeviceCodeLifetime_Info" xml:space="preserve">
    <value>Tiempo de vida del código de dispositivo en segundos. 300 segundos / 5 minutos por defecto.</value>
  </data>
  <data name="DeviceCodeLifetime_Label" xml:space="preserve">
    <value>Tiempo de vida del código de despositivo</value>
  </data>
  <data name="UserCodeType_Info" xml:space="preserve">
    <value>Especifica el tipo de código de usuario a usar por el cliente. De lo contrario utiliza default.</value>
  </data>
  <data name="UserCodeType_Label" xml:space="preserve">
    <value>Tipo de código de usuario</value>
  </data>
  <data name="Expiration_Info" xml:space="preserve">
    <value>Expiración</value>
  </data>
  <data name="Expiration_Label" xml:space="preserve">
    <value>Expiración</value>
  </data>
  <data name="SecretDescription_Info" xml:space="preserve">
    <value>Descripción</value>
  </data>
  <data name="SecretDescription_Label" xml:space="preserve">
    <value>Descripción</value>
  </data>
</root>
