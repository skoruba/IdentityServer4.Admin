<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Description_Info" xml:space="preserve">
    <value>Este valor puede ser usado, por ejemplo, en la pantalla de consentimiento.</value>
  </data>
  <data name="Description_Label" xml:space="preserve">
    <value>Descripción</value>
  </data>
  <data name="DisplayName_Info" xml:space="preserve">
    <value>Este valor puede ser usado, por ejemplo, en la pantalla de consentimiento.</value>
  </data>
  <data name="DisplayName_Label" xml:space="preserve">
    <value>Nombre en pantalla</value>
  </data>
  <data name="Emphasize_Info" xml:space="preserve">
    <value>Especifica si la pantalla de consentimiento enfatizará este alcance (si es que la pantalla de consentimiento implementa la caracteristica). Usa esta opción para alcances delicadas o importantes. Deshabilitado por defecto.</value>
  </data>
  <data name="Emphasize_Label" xml:space="preserve">
    <value>Enfatizar</value>
  </data>
  <data name="Enabled_Info" xml:space="preserve">
    <value>Indica si el recurso esta habilitado y puede ser solicitado. Habilitado por defecto.</value>
  </data>
  <data name="Enabled_Label" xml:space="preserve">
    <value>Habilitado</value>
  </data>
  <data name="Name_Info" xml:space="preserve">
    <value>El nombre unico del recurso de identidad. Este es el valor que un cliente puede usar para el parametro de alcance en la petición de autorización.</value>
  </data>
  <data name="Name_Label" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="Properties_Info" xml:space="preserve">
    <value>Diccionario que mantiene cualquier valor especifico personalizado de recurso de identidad cuando se necesite.</value>
  </data>
  <data name="Properties_Label" xml:space="preserve">
    <value>Propiedades</value>
  </data>
  <data name="PropertyKey_Info" xml:space="preserve">
    <value>Llave</value>
  </data>
  <data name="PropertyKey_Label" xml:space="preserve">
    <value>Llave</value>
  </data>
  <data name="PropertyValue_Info" xml:space="preserve">
    <value>Valor</value>
  </data>
  <data name="PropertyValue_Label" xml:space="preserve">
    <value>Valor</value>
  </data>
  <data name="Required_Info" xml:space="preserve">
    <value>Especifica si el usuario puede desmarcar el alcance en la pantalla de consentimiento (si la pantalla de consentimiento implementa la funcionalidad). Deshabilitado por defecto.</value>
  </data>
  <data name="Required_Label" xml:space="preserve">
    <value>Requerido</value>
  </data>
  <data name="ShowInDiscoveryDocument_Info" xml:space="preserve">
    <value>Especifica si el alcance aparece en el documento de descubrimiento. Habilitado por defecto.</value>
  </data>
  <data name="ShowInDiscoveryDocument_Label" xml:space="preserve">
    <value>Mostrar en documento de descrubrimiento</value>
  </data>
  <data name="UserClaims_Info" xml:space="preserve">
    <value>Lista de tipos de reclamación de usuario asociadas que deberian ser incluidas en la token de identidad.</value>
  </data>
  <data name="UserClaims_Label" xml:space="preserve">
    <value>Reclamaciones de usuario</value>
  </data>
</root>
