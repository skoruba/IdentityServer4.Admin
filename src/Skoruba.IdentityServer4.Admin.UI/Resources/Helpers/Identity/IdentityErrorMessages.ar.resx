<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConcurrencyFailure" xml:space="preserve">
    <value>فشل التزامن المتفائل ، تم تعديل الكائن.</value>
    <comment>Error when optimistic concurrency fails</comment>
  </data>
  <data name="DefaultError" xml:space="preserve">
    <value>حدث فشل غير معروف.</value>
    <comment>Default identity result error message</comment>
  </data>
  <data name="DuplicateEmail" xml:space="preserve">
    <value>البريد الإلكتروني '{0}' مستخدم بالفعل.</value>
    <comment>Error for duplicate emails</comment>
  </data>
  <data name="DuplicateRoleName" xml:space="preserve">
    <value>اسم الدور '{0}' مستخدم بالفعل.</value>
    <comment>Error for duplicate roles</comment>
  </data>
  <data name="DuplicateUserName" xml:space="preserve">
    <value>اسم المستخدم '{0}' مستخدم بالفعل.</value>
    <comment>Error for duplicate user names</comment>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>البريد الإلكتروني '{0}' غير صالح.</value>
    <comment>Invalid email</comment>
  </data>
  <data name="InvalidPasswordHasherCompatibilityMode" xml:space="preserve">
    <value>The provided PasswordHasherCompatibilityMode is invalid.</value>
    <comment>Error when the password hasher doesn't understand the format it's being asked to produce.</comment>
  </data>
  <data name="InvalidPasswordHasherIterationCount" xml:space="preserve">
    <value>يجب أن يكون عدد التكرار عددًا صحيحًا موجبًا.</value>
    <comment>Error when the iteration count is &lt; 1.</comment>
  </data>
  <data name="InvalidRoleName" xml:space="preserve">
    <value>اسم الدور '{0}' غير صالح.</value>
    <comment>Error for invalid role names</comment>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>رمز غير صالح.</value>
    <comment>Error when a token is not recognized</comment>
  </data>
  <data name="InvalidUserName" xml:space="preserve">
    <value>اسم المستخدم '{0}' غير صالح ، يمكن أن يحتوي فقط على أحرف أو أرقام.</value>
    <comment>User names can only contain letters or digits</comment>
  </data>
  <data name="LoginAlreadyAssociated" xml:space="preserve">
    <value>مستخدم مع تسجيل الدخول هذا موجود بالفعل.</value>
    <comment>Error when a login already linked</comment>
  </data>
  <data name="PasswordMismatch" xml:space="preserve">
    <value>كلمة سر خاطئة.</value>
    <comment>Error when a password doesn't match</comment>
  </data>
  <data name="PasswordRequiresDigit" xml:space="preserve">
    <value>يجب أن تحتوي كلمات المرور على رقم واحد على الأقل ('0' - '9').</value>
    <comment>Error when passwords do not have a digit</comment>
  </data>
  <data name="PasswordRequiresLower" xml:space="preserve">
    <value>يجب أن تحتوي كلمات المرور على حرف صغير واحد على الأقل ('a' - 'z').</value>
    <comment>Error when passwords do not have a lowercase letter</comment>
  </data>
  <data name="PasswordRequiresNonAlphanumeric" xml:space="preserve">
    <value>يجب أن تحتوي كلمات المرور على حرف واحد على الأقل ليس أبجديًا.</value>
    <comment>Error when password does not have enough non alphanumeric characters</comment>
  </data>
  <data name="PasswordRequiresUpper" xml:space="preserve">
    <value>يجب أن تحتوي كلمات المرور على حرف كبير واحد على الأقل ('A' - 'Z').</value>
    <comment>Error when passwords do not have an uppercase letter</comment>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>يجب أن تتكون كلمات المرور من '{0}' حرف على الأقل.</value>
    <comment>Error message for passwords that are too short</comment>
  </data>
  <data name="RoleNotFound" xml:space="preserve">
    <value>الدور '{0}' غير موجود.</value>
    <comment>Error when a role does not exist</comment>
  </data>
  <data name="RecoveryCodeRedemptionFailed" xml:space="preserve">
    <value>فشل استرداد رمز الاسترجاع.</value>
    <comment>Error when a recovery code is not redeemed.</comment>
  </data>
  <data name="UserAlreadyHasPassword" xml:space="preserve">
    <value>تم تعيين كلمة مرور للمستخدم بالفعل.</value>
    <comment>Error when AddPasswordAsync called when a user already has a password</comment>
  </data>
  <data name="UserAlreadyInRole" xml:space="preserve">
    <value>المستخدم بالفعل في الدور '{0}'.</value>
    <comment>Error when a user is already in a role</comment>
  </data>
  <data name="UserLockedOut" xml:space="preserve">
    <value>تم حظر المستخدم.</value>
    <comment>Error when a user is locked out</comment>
  </data>
  <data name="UserLockoutNotEnabled" xml:space="preserve">
    <value>لم يتم تمكين الحظر لهذا المستخدم.</value>
    <comment>Error when lockout is not enabled</comment>
  </data>
  <data name="UserNameNotFound" xml:space="preserve">
    <value>المستخدم '{0}' غير موجود.</value>
    <comment>Error when a user does not exist</comment>
  </data>
  <data name="UserNotInRole" xml:space="preserve">
    <value>المستخدم ليس في الدور '{0}'.</value>
    <comment>Error when a user is not in the role</comment>
  </data>
  <data name="PasswordRequiresUniqueChars" xml:space="preserve">
    <value>يجب أن تستخدم كلمات المرور '{0}' حرفًا مختلفًا على الأقل.</value>
    <comment>Error message for passwords that are based on similar characters</comment>
  </data>
</root>